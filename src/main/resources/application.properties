spring.datasource.url=jdbc:postgresql://ec2-52-22-161-59.compute-1.amazonaws.com/ddjmlj3ckikel5?sslmode=require
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=wpswdjsvlvkhtf
spring.datasource.password=b15924de9bc2a6ccdecb7ef1eca92ebac3f052ffa51d1e2cc07bd201a3834d36
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.initialization-mode=always
spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.platform=postgres

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query

# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application


# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
logging.level.org.springframework.web: TRACE
logging.level.org.hibernate: ERROR
logging.level.root:INFO
logging.level.com.tickettracker=DEBUG